# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from src.infra.adapters.inbound.grpc.py_proto import service_pb2 as service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DocumentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDocument = channel.unary_unary(
                '/document.DocumentService/GetDocument',
                request_serializer=service__pb2.GetDocumentRequest.SerializeToString,
                response_deserializer=service__pb2.GetDocumentResponse.FromString,
                _registered_method=True)
        self.CreateDocument = channel.unary_unary(
                '/document.DocumentService/CreateDocument',
                request_serializer=service__pb2.CreateDocumentRequest.SerializeToString,
                response_deserializer=service__pb2.Document.FromString,
                _registered_method=True)
        self.UpdateDocument = channel.unary_unary(
                '/document.DocumentService/UpdateDocument',
                request_serializer=service__pb2.UpdateDocumentRequest.SerializeToString,
                response_deserializer=service__pb2.UpdateDocumentResponse.FromString,
                _registered_method=True)
        self.DeleteDocument = channel.unary_unary(
                '/document.DocumentService/DeleteDocument',
                request_serializer=service__pb2.DeleteDocumentRequest.SerializeToString,
                response_deserializer=service__pb2.DeleteDocumentResponse.FromString,
                _registered_method=True)
        self.RestoreDocument = channel.unary_unary(
                '/document.DocumentService/RestoreDocument',
                request_serializer=service__pb2.RestoreDocumentRequest.SerializeToString,
                response_deserializer=service__pb2.Document.FromString,
                _registered_method=True)
        self.ListDocuments = channel.unary_unary(
                '/document.DocumentService/ListDocuments',
                request_serializer=service__pb2.ListDocumentsRequest.SerializeToString,
                response_deserializer=service__pb2.ListDocumentsResponse.FromString,
                _registered_method=True)
        self.GetDocumentVersions = channel.unary_unary(
                '/document.DocumentService/GetDocumentVersions',
                request_serializer=service__pb2.GetDocumentVersionsRequest.SerializeToString,
                response_deserializer=service__pb2.GetDocumentVersionsResponse.FromString,
                _registered_method=True)
        self.GetDocumentVersion = channel.unary_unary(
                '/document.DocumentService/GetDocumentVersion',
                request_serializer=service__pb2.GetDocumentVersionRequest.SerializeToString,
                response_deserializer=service__pb2.DocumentVersion.FromString,
                _registered_method=True)


class DocumentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocumentVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocumentVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DocumentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocument,
                    request_deserializer=service__pb2.GetDocumentRequest.FromString,
                    response_serializer=service__pb2.GetDocumentResponse.SerializeToString,
            ),
            'CreateDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDocument,
                    request_deserializer=service__pb2.CreateDocumentRequest.FromString,
                    response_serializer=service__pb2.Document.SerializeToString,
            ),
            'UpdateDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDocument,
                    request_deserializer=service__pb2.UpdateDocumentRequest.FromString,
                    response_serializer=service__pb2.UpdateDocumentResponse.SerializeToString,
            ),
            'DeleteDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDocument,
                    request_deserializer=service__pb2.DeleteDocumentRequest.FromString,
                    response_serializer=service__pb2.DeleteDocumentResponse.SerializeToString,
            ),
            'RestoreDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreDocument,
                    request_deserializer=service__pb2.RestoreDocumentRequest.FromString,
                    response_serializer=service__pb2.Document.SerializeToString,
            ),
            'ListDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDocuments,
                    request_deserializer=service__pb2.ListDocumentsRequest.FromString,
                    response_serializer=service__pb2.ListDocumentsResponse.SerializeToString,
            ),
            'GetDocumentVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocumentVersions,
                    request_deserializer=service__pb2.GetDocumentVersionsRequest.FromString,
                    response_serializer=service__pb2.GetDocumentVersionsResponse.SerializeToString,
            ),
            'GetDocumentVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocumentVersion,
                    request_deserializer=service__pb2.GetDocumentVersionRequest.FromString,
                    response_serializer=service__pb2.DocumentVersion.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'document.DocumentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('document.DocumentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DocumentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/document.DocumentService/GetDocument',
            service__pb2.GetDocumentRequest.SerializeToString,
            service__pb2.GetDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/document.DocumentService/CreateDocument',
            service__pb2.CreateDocumentRequest.SerializeToString,
            service__pb2.Document.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/document.DocumentService/UpdateDocument',
            service__pb2.UpdateDocumentRequest.SerializeToString,
            service__pb2.UpdateDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/document.DocumentService/DeleteDocument',
            service__pb2.DeleteDocumentRequest.SerializeToString,
            service__pb2.DeleteDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RestoreDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/document.DocumentService/RestoreDocument',
            service__pb2.RestoreDocumentRequest.SerializeToString,
            service__pb2.Document.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/document.DocumentService/ListDocuments',
            service__pb2.ListDocumentsRequest.SerializeToString,
            service__pb2.ListDocumentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDocumentVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/document.DocumentService/GetDocumentVersions',
            service__pb2.GetDocumentVersionsRequest.SerializeToString,
            service__pb2.GetDocumentVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDocumentVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/document.DocumentService/GetDocumentVersion',
            service__pb2.GetDocumentVersionRequest.SerializeToString,
            service__pb2.DocumentVersion.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
